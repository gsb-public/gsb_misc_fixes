<?php

/**
 * Implements hook_form_FORM_ID_alter().
 */
function gsb_misc_fixes_form_node_form_alter(&$form, &$form_state) {
  $form['#submit'][] = 'gsb_misc_fixes_menufix_node_submit';
}

function gsb_misc_fixes_menufix_node_submit($form, &$form_state) {
  if (!user_access('administer menu') && !empty($form['#node']->menu['mlid'])) {
    $form_state['node']->menu['enabled'] = 1;
    unset($form_state['values']['menu']);
  }
}

/**
 * Implements hook_url_outbound_alter().
 *
 * Adds the fragment portion of the url to the options array.
 */
function gsb_misc_fixes_url_outbound_alter(&$path, &$options, $original_path) {
  if (!$options['external']) {
    $url = parse_url($original_path);
    if (isset($url['fragment'])){
      // set path without the fragment
      $path = $url['path'];
      // prevent URL from re-aliasing
      $options['alias'] = TRUE;
      // set fragment
      $options['fragment'] = $url['fragment'];
      // set query params as key value pairs
      if (!empty($url['query'])) {
        $params = explode('&', $url['query']);
        foreach($params as $param) {
          list($k, $v) = explode('=', $param);
          $query[$k] = $v;
        }
        $options['query'] = $query;
      }
    }
  }
}
/**
 * Implements hook_block_view_alter().
 *
 * Removes any link in menu_block(29) that links to the node of the current page.
 */
function gsb_misc_fixes_block_view_alter(&$data, $block) {
  if ($block->module != 'menu_block' || $block->delta != '29') {
    return;
  }
  if (arg(0) == 'node' && is_numeric(arg(1))) {
    $nid = arg(1);
    foreach ($data['content']['#content'] as $key => $value) {
      if (!empty($data['content']['#content'][$key]['#href']) && $data['content']['#content'][$key]['#href'] == 'node/' . $nid) {
        unset($data['content']['#content'][$key]);
        break;
      }
    }
  }
}
